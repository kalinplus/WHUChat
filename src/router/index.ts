import { setupLayouts } from "virtual:generated-layouts";
import { createRouter, createWebHistory } from "vue-router";
import { routes as autoGeneratedRoutes } from "vue-router/auto-routes";
import type { RouteRecordRaw } from "vue-router";
import { useStateStore } from "@/stores/states";

const indexRoute = autoGeneratedRoutes.find((route) => route.name === "/");
const indexComponent = indexRoute?.component;

console.log("Auto generated routes:", autoGeneratedRoutes);
console.log("Index route found:", indexRoute);
console.log("Index component:", indexComponent);

// 直接导入 chat 组件
const chatComponent = () => import("@/pages/chat.vue");

// 创建完整的路由数组
const allRoutes = [
  ...autoGeneratedRoutes,
  {
    path: "/",
    redirect: "/login",
  },
  {
    path: "/chat/:user",
    redirect: "/chat",
    // name: "conversation",
    // component: chatComponent,
    // props: true,
    // meta: { requiresAuth: true },
  },
  {
    path: "/chat/:user/:session_id",
    name: "session",
    component: chatComponent,
    props: true,
    meta: { requiresAuth: true },
  },
];

console.log(allRoutes);

const router = createRouter({
  history: createWebHistory(import.meta.env.BASE_URL),
  routes: setupLayouts(allRoutes as RouteRecordRaw[]),
});

router.onError((err, to) => {
  if (err?.message?.includes?.("Failed to fetch dynamically imported module")) {
    if (!localStorage.getItem("vuetify:dynamic-reload")) {
      console.log("Reloading page to fix dynamic import error");
      localStorage.setItem("vuetify:dynamic-reload", "true");
      location.assign(to.fullPath);
    } else {
      console.error("Dynamic import error, reloading page did not fix it", err);
    }
  } else {
    console.error(err);
  }
});

// Add beforeEach guard for chat route to fetch user session
// router.beforeEach(async (to, from, next) => {
//   // Only apply this guard to /chat route
//   if (to.path === "/chat") {
//     console.log(
//       "[Router Guard] Accessing /chat route, checking user session..."
//     );

//     const stateStore = useStateStore();

//     try {
//       const response = await fetch(`/api/v1/gate/get_chatserver`, {
//         method: "GET",
//         credentials: "include", // Important for sending cookies
//       });

//       if (!response.ok) {
//         console.error(`[Router Guard] Fetch failed: ${response.status}`);
//         return next({ name: "/login" });
//       }

//       const data = await response.json();
//       console.log("[Router Guard] Fetched user session data:", data);

//       if (data.error === 0 && data.uuid) {
//         console.log("[Router Guard] User session valid, setting state:", data);
//         stateStore.setUser({
//           uuid: data.uuid,
//           username: data.username,
//         });
//         stateStore.setAddr(data.addr);
//         next();
//       } else {
//         console.error(`[Router Guard] API error or no UUID: ${data.error}`);
//         next({ name: "/login" });
//       }
//     } catch (error) {
//       console.error("[Router Guard] Exception:", error);
//       next({ name: "/login" });
//     }
//   } else {
//     // For all other routes, proceed normally
//     next();
//   }
// });

router.isReady().then(() => {
  localStorage.removeItem("vuetify:dynamic-reload");
});

export default router;
